// CCC 2007
//
// S3: Friends
//
// This is a relatively straight forward array processing exercise,
// with a bit of a twist.
//
// number is an array of student numbers (not sorted)
//     (they MIGHT be anything so strings are used)
// friend is an array of friends :-)
//     (that is friend[5] is the friend of number[5])
//
// SO the real issue is given a student number, find its location
// in the number array, and then use that to see who the friend is,
// using the friend array. Cycle thru this until you get back to
// the original person or the one you're looking for. That will give
// you the separation, if you get back to the second person. (If you
// end up back at the start, they are not in the same circle.)
//
// Data file 4 is tricky: there are student numbers
// NOT in the school so you need to watch out for that.
//
// Note: searching is linear and slow.
// But it still runs within 10 seconds.
//

import java.awt.*;
import hsa.*;

public class CCC2007S3Friends
{
    static Console c;
    static int n, i, size, distance;
    static String s1, s2, x;
    static String[] friend;
    static String[] number;

    public static void main (String[] args)
    {
	c = new Console ();
	TextInputFile f = new TextInputFile ("s3.2.in");

	// get the friend relationships
	n = f.readInt ();
	friend = new String [n];
	number = new String [n];
	size = n;
	for (int i = 0 ; i < n ; i++)
	{
	    s1 = f.readString ();
	    s2 = f.readString ();
	    number [i] = s1;
	    friend [i] = s2;
	}

	// get the student numbers and determine relationship
	// watch out for invalid student numbers.
	s1 = f.readString ();
	s2 = f.readString ();
	while (!(s1.equals ("0") && s2.equals ("0")))
	{
	    x = s1;
	    i = find (x);
	    distance = 0;
	    while (i >= 0 && !(friend [i].equals (s1) || friend [i].equals (s2)))
	    {
		distance++;
		x = friend [i];
		i = find (x);
	    }
	    if (i >= 0 && friend [i].equals (s2))
		c.println ("Yes " + distance);
	    else
		c.println ("No");
	    s1 = f.readString ();
	    s2 = f.readString ();
	}
    }


    // this returns the location of s in the number array
    // -1 if not found.
    public static int find (String s)
    {
	int i;
	i = 0;
	while (i < size && !number [i].equals (s))
	    i++;
	if (i < size)
	    return i;
	else
	    return -1;

    }
}

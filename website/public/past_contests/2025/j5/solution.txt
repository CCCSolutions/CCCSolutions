// By Daniel Zhang, Pinetree Secondary

#include <bits/stdc++.h>

using namespace std;

int r, c, m;

int grid(int row, int col) {
    return (row * c + col) % m + 1;
}

int main() {
    cin >> r >> c >> m;
    
    vector<int> prev(c, 0), curr(c, 0);

    for (int i = 0; i < c; i++) {
        prev[i] = grid(0, i);
    }

    for (int i = 1; i < r; i++) {
        curr[0] = min(prev[0], prev[1]) + grid(i, 0);
        curr[c - 1] = min(prev[c - 2], prev[c - 1]) + grid(i, c - 1);

        for (int j = 1; j < c - 1; j++) {
            curr[j] = min({prev[j - 1], prev[j], prev[j + 1]}) + grid(i, j);
        }

        swap(prev, curr);
    }

    cout << *min_element(prev.begin(), prev.end()) << endl;
}